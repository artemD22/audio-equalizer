
#ifndef COEFF
#define	COEFF

#include "stdint.h"
#include "stdbool.h"
#include <stdio.h>
#include <stdlib.h>
#include <libq.h>
#include <dsp.h>

fractional __attribute__((address(0x872), aligned)) coeff1S[36] = {
Q15(0),
Q15(0.00019112550902624688),
Q15(0.00079514088176664251),
Q15(0.0018919336196699199),
Q15(0.0035949899020209196),
Q15(0.0060304131307446418),
Q15(0.0093108187144922711),
Q15(0.013507818718008472),
Q15(0.018627142412884531),
Q15(0.024590218271809454),
Q15(0.031225290830659051),
Q15(0.038269956054974019),
Q15(0.045385525921545988),
Q15(0.052182071506050268),
Q15(0.058251552618058526),
Q15(0.063205315446446461),
Q15(0.06671158167732498),
Q15(0.068528455374251215),
Q15(0.068528455374251215),
Q15(0.06671158167732498),
Q15(0.063205315446446461),
Q15(0.058251552618058526),
Q15(0.052182071506050268),
Q15(0.045385525921545988),
Q15(0.038269956054974019),
Q15(0.031225290830659051),
Q15(0.024590218271809454),
Q15(0.018627142412884531),
Q15(0.013507818718008472),
Q15(0.0093108187144922711),
Q15(0.0060304131307446418),
Q15(0.0035949899020209196),
Q15(0.0018919336196699199),
Q15(0.00079514088176664251),
Q15(0.00019112550902624688),
Q15(0)};

fractional __attribute__((address(0x8ba), aligned)) coeff2S[36] = {
Q15(0),
Q15(0.00027097854280705528),
Q15(0.00093887158778541363),
Q15(0.0014464411371405178),
Q15(0.0007751321487693613),
Q15(-0.0023954135999992568),
Q15(-0.0092368560975848602),
Q15(-0.020063474491003003),
Q15(-0.03360445126206528),
Q15(-0.046647954757624843),
Q15(-0.054422748057208793),
Q15(-0.051836234824356085),
Q15(-0.035295780020726301),
Q15(-0.0044799155554062489),
Q15(0.036706642080923474),
Q15(0.08055510500200122),
Q15(0.1174155000090417),
Q15(0.13847118550611021),
Q15(0.13847118550611021),
Q15(0.1174155000090417),
Q15(0.08055510500200122),
Q15(0.036706642080923474),
Q15(-0.0044799155554062489),
Q15(-0.035295780020726301),
Q15(-0.051836234824356085),
Q15(-0.054422748057208793),
Q15(-0.046647954757624843),
Q15(-0.03360445126206528),
Q15(-0.020063474491003003),
Q15(-0.0092368560975848602),
Q15(-0.0023954135999992568),
Q15(0.0007751321487693613),
Q15(0.0014464411371405178),
Q15(0.00093887158778541363),
Q15(0.00027097854280705528),
Q15(0)};

fractional __attribute__((address(0x902), aligned)) coeff3S[36] = {
Q15(0),
Q15(0.000007908313264951539),
Q15(0.00021066503978724562),
Q15(0.00020896682466429824),
Q15(-0.0016887010560986005),
Q15(-0.0045941414455172632),
Q15(-0.0027619170058575254),
Q15(0.0050001067845253152),
Q15(0.0077663168583645553),
Q15(0.0007542825209108418),
Q15(0.0052218771782345701),
Q15(0.035529000198961554),
Q15(0.046000278714924521),
Q15(-0.02752473650147259),
Q15(-0.14379670039657311),
Q15(-0.15100172435527495),
Q15(0.019046970215153457),
Q15(0.21166799507707054),
Q15(0.21166799507707054),
Q15(0.019046970215153457),
Q15(-0.15100172435527495),
Q15(-0.14379670039657311),
Q15(-0.02752473650147259),
Q15(0.046000278714924521),
Q15(0.035529000198961554),
Q15(0.0052218771782345701),
Q15(0.0007542825209108418),
Q15(0.0077663168583645553),
Q15(0.0050001067845253152),
Q15(-0.0027619170058575254),
Q15(-0.0045941414455172632),
Q15(-0.0016887010560986005),
Q15(0.00020896682466429824),
Q15(0.00021066503978724562),
Q15(0.000007908313264951539),
Q15(0)};

fractional __attribute__((address(0x94a), aligned)) coeff4S[36] = {
Q15(0),
Q15(-0.000038309686227220442),
Q15(0.000032239412597830089),
Q15(0.000057801850558021866),
Q15(0.0014345823406153692),
Q15(-0.0037760279415536063),
Q15(0.0000000000000000071131836883723771),
Q15(0.0099776905207642624),
Q15(-0.010371800307065367),
Q15(-0.0012469449575996567),
Q15(-0.0025225746735900172),
Q15(0.01860196004593764),
Q15(0.01618976222451322),
Q15(-0.10228511335574242),
Q15(0.097202418858543707),
Q15(0.080298055970013632),
Q15(-0.23855590280103445),
Q15(0.13502536095373469),
Q15(0.13502536095373469),
Q15(-0.23855590280103445),
Q15(0.080298055970013632),
Q15(0.097202418858543707),
Q15(-0.10228511335574242),
Q15(0.01618976222451322),
Q15(0.01860196004593764),
Q15(-0.0025225746735900172),
Q15(-0.0012469449575996567),
Q15(-0.010371800307065367),
Q15(0.0099776905207642624),
Q15(0.0000000000000000071131836883723771),
Q15(-0.0037760279415536063),
Q15(0.0014345823406153692),
Q15(0.000057801850558021866),
Q15(0.000032239412597830089),
Q15(-0.000038309686227220442),
Q15(0)};


fractional __attribute__((address(0x992), aligned)) coeff5S[36] = {
Q15(0),
Q15(0.000091513862284077165),
Q15(-0.00039777943156243018),
Q15(0.00077743184247818615),
Q15(-0.00085580519965447737),
Q15(0.00024838715626545075),
Q15(0.00095110754191128719),
Q15(-0.0015874744245320609),
Q15(-0.00081908191682932897),
Q15(0.0095439825771478446),
Q15(-0.027172416744385065),
Q15(0.053600517762170494),
Q15(-0.084539838292353606),
Q15(0.1116417354106727),
Q15(-0.12475903943969853),
Q15(0.11576519914460733),
Q15(-0.082340115474193912),
Q15(0.029847468569815346),
Q15(0.029847468569815346),
Q15(-0.082340115474193912),
Q15(0.11576519914460733),
Q15(-0.12475903943969853),
Q15(0.1116417354106727),
Q15(-0.084539838292353606),
Q15(0.053600517762170494),
Q15(-0.027172416744385065),
Q15(0.0095439825771478446),
Q15(-0.00081908191682932897),
Q15(-0.0015874744245320609),
Q15(0.00095110754191128719),
Q15(0.00024838715626545075),
Q15(-0.00085580519965447737),
Q15(0.00077743184247818615),
Q15(-0.00039777943156243018),
Q15(0.000091513862284077165),
Q15(0)};

FIRStruct __attribute__((address(0x800))) FIR1S;
FIRStruct __attribute__((address(0x80e))) FIR2S;
FIRStruct __attribute__((address(0x822))) FIR3S;
FIRStruct __attribute__((address(0x836))) FIR4S;
FIRStruct __attribute__((address(0x84a))) FIR5S;

int numCoeffs = 36;
fractional __attribute__((address(0x85e))) input_value1S[1];   
fractional __attribute__((address(0x860))) output_value1S[1];  

fractional __attribute__((address(0x862))) input_value2S[1];   
fractional __attribute__((address(0x864))) output_value2S[1];

fractional __attribute__((address(0x866))) input_value3S[1];   
fractional __attribute__((address(0x868))) output_value3S[1];

fractional __attribute__((address(0x86a))) input_value4S[1];   
fractional __attribute__((address(0x86c))) output_value4S[1];

fractional __attribute__((address(0x86e))) input_value5S[1];   
fractional __attribute__((address(0x870))) output_value5S[1];

fractional __attribute__((address(0xC00), aligned)) delays1S[36];
fractional __attribute__((address(0xC48), aligned)) delays2S[36];
fractional __attribute__((address(0xC98), aligned)) delays3S[36];
fractional __attribute__((address(0xCE0), aligned)) delays4S[36];
fractional __attribute__((address(0xD28), aligned)) delays5S[36];


#endif	/* XC_HEADER_TEMPLATE_H */

